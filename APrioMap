package labb3;

import java.util.ArrayList;
import java.util.Comparator;

public class APrioMap<E> implements PrioMap {
	Comparator<? super E> c;
	ArrayList<E> heapls = new ArrayList<E>();
	int size;
	
	public APrioMap(Comparator<? super E> comp){
		this.c = comp;
		size = 0;
	}
	
	@Override
	public void put(Object k, Comparable v) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public Comparable get(Object k) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Pair peek() {
		        if(heapls.size()> 0){
		            return (Pair) (heapls.get(0));
		        }
		        return null;
		    }
			
	

	@Override
	public Pair poll() {
		if(heapls.size()> 0){
			delete(heapls.get(0));
            return (Pair) (heapls.get(0));
        }
        return null;
	}
	public void delete (Object e) {
		// remove size-1
		
	    int index = heapls.size()-1;
	    int temp = 0;
	    for(int j = 0; j<heapls.size();j++) {
	    	if(e == heapls.get(j)) {
	    	
	    		temp = j;
	    	}
	    }
		heapls.set(temp,heapls.get(index));
		heapls.remove(index);
		if(heapls.size() > 0) {
			moveDown(index);	
		}
	}

	public void moveUp (int x) {
		E temp = heapls.get(x);
		if(x>0 && c.compare(temp,heapls.get(parentOf(x))) < 0) {
		heapls.set(x,heapls.get(parentOf(x)));
		heapls.set(parentOf(x),temp);
		moveUp(parentOf(x));
		}
	}

	public void moveDown (int x) {
		E e_temp = heapls.get(x);
		if(secondChild(x) < heapls.size() && c.compare(heapls.get(firstChild(x)),heapls.get(secondChild(x)))<0) {
			if(c.compare(e_temp,heapls.get(secondChild(x))) <0) {
				heapls.set(x,heapls.get(secondChild(x)));
				heapls.set(secondChild(x),e_temp);
				moveDown(secondChild(x));

			}
		}
	else {
		if(firstChild(x) < heapls.size() && c.compare(e_temp,heapls.get(firstChild(x)))<0) {
			heapls.set(x,heapls.get(firstChild(x)));
			heapls.set(firstChild(x),e_temp);
			moveDown(firstChild(x));
		}
	}
}

	public int parentOf(int x) {
		return (x-1) / 2;
	}

	public int firstChild(int x) {
		return 2*x+1;
	}

	public int secondChild(int x) {
		return 2*(x+1);
	}
	public void prntheap() {
		for(int i = 0; i < heapls.size();i++) {
		System.out.println(heapls.get(i));
		}
	}

}
